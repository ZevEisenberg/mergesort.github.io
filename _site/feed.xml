<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2018-02-04T16:06:26-05:00</updated><id>http://localhost:4000/</id><title type="html">Fabisevi.ch</title><subtitle>iOS Developer &amp; Design Contractor
</subtitle><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><entry><title type="html">The Future Will Be Signed</title><link href="http://localhost:4000/2018/01/16/the-future-will-be-signed/" rel="alternate" type="text/html" title="The Future Will Be Signed" /><published>2018-01-16T00:00:00-05:00</published><updated>2018-01-16T00:00:00-05:00</updated><id>http://localhost:4000/2018/01/16/the-future-will-be-signed</id><content type="html" xml:base="http://localhost:4000/2018/01/16/the-future-will-be-signed/">&lt;p&gt;Cryptography is becoming more important in our every day lives and there’s no way around it. Whether it’s the calls from governments to &lt;a href=&quot;https://en.wikipedia.org/wiki/Encryption_ban_proposal_in_the_United_Kingdom&quot;&gt;ban encryption&lt;/a&gt;, come up with &lt;a href=&quot;https://www.eff.org/deeplinks/2017/10/deputy-attorney-general-rosensteins-responsible-encryption-demand-bad-and-he&quot;&gt;“responsible encryption”&lt;/a&gt;, or to &lt;a href=&quot;https://www.npr.org/sections/thetwo-way/2017/06/22/533977417/trump-sued-for-allegedly-violating-presidential-records-act&quot;&gt;violate norms and laws&lt;/a&gt;, cryptography is playing a role in shaping our society. I’d like to approach the role of cryptography from the other perspective though, from the side of helping us prove facts about the world around us.&lt;/p&gt;

&lt;p&gt;We are entering an era where technology empowers people to create artificial evidence for stories and narratives. While we can’t yet create facts, we’re approaching a point where artificial evidence looks very believable.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Nvidia is using machine learning to generate &lt;a href=&quot;https://www.nytimes.com/interactive/2018/01/02/technology/ai-generated-photos.html&quot;&gt;fake pictures of humans&lt;/a&gt; that seem so real that humans can’t tell they’re fake.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://lyrebird.ai/demo&quot;&gt;Lyrebird&lt;/a&gt; is building technology that allows people to enter text, and they will generate a rather convincing audio file of someone (like… say… Donald Trump) speaking it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Watch &lt;a href=&quot;https://youtu.be/vprETB4dzNE&quot;&gt;this video clip&lt;/a&gt; of Barack Obama saying things he never said. I guarantee you there’s at least a few people who are fooled by this &lt;a href=&quot;http://www.radiolab.org/story/breaking-news/&quot;&gt;today&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today you may think “this doesn’t quite sound like Donald Trump” or “that doesn’t quite look like Barack Obama”, but technology only moves forward. It’s going to get better and better. What happens when you can’t believe your eyes and ears? What happens when you have to question every picture you see, every sound you hear, every video you watch?&lt;/p&gt;

&lt;p&gt;We need to have answers before this becomes a problem. &lt;strong&gt;We’re going to need a way to prove the authenticity of a piece of digital content&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;everywhere&lt;/strong&gt;&lt;strong&gt;,&lt;/strong&gt; &lt;strong&gt;in a simple manner.&lt;/strong&gt; This is where &lt;a href=&quot;https://en.wikipedia.org/wiki/Public-key_cryptography&quot;&gt;public key cryptography&lt;/a&gt; comes in. Our current solutions are &lt;a href=&quot;https://keybase.io&quot;&gt;noble efforts&lt;/a&gt;, but remain &lt;a href=&quot;https://help.github.com/articles/signing-commits-using-gpg/&quot;&gt;too complex&lt;/a&gt;. &lt;strong&gt;This infrastructure is going to have to be baked directly into the software that developers build, in a way that is transparent to the end user.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A politician (or anyone) needs to be able to sign a tweet, audio recording, or video clip to prove authenticity of what they are saying. With the creation and fabrication of content being so easy, we’re going to need a model where the person creating the content can prove it is trustworthy, and otherwise it should be treated as inauthentic.&lt;/p&gt;

&lt;p&gt;Outlawing encryption and controlling cryptography is a really bad idea. It may end up that these technologies help us maintain a level of trust in our society.&lt;/p&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="society" /><category term="industry" /><category term="featured" /><summary type="html">Cryptography is becoming more important in our every day lives and there’s no way around it. Whether it’s the calls from governments to ban encryption, come up with “responsible encryption”, or to violate norms and laws, cryptography is playing a role in shaping our society. I’d like to approach the role of cryptography from the other perspective though, from the side of helping us prove facts about the world around us.</summary></entry><entry><title type="html">Learning About Cryptocurrency</title><link href="http://localhost:4000/2018/01/06/learning-about-cryptocurrency/" rel="alternate" type="text/html" title="Learning About Cryptocurrency" /><published>2018-01-06T00:00:00-05:00</published><updated>2018-01-06T00:00:00-05:00</updated><id>http://localhost:4000/2018/01/06/learning-about-cryptocurrency</id><content type="html" xml:base="http://localhost:4000/2018/01/06/learning-about-cryptocurrency/">&lt;p&gt;Cryptocurrency is all the rage these days. From &lt;a href=&quot;https://en.wikipedia.org/wiki/Bitcoin&quot;&gt;Bitcoin&lt;/a&gt; to &lt;a href=&quot;https://en.wikipedia.org/wiki/Ethereum&quot;&gt;Ethereum&lt;/a&gt; to &lt;a href=&quot;https://en.wikipedia.org/wiki/Ripple_(payment_protocol)&quot;&gt;Ripple&lt;/a&gt;, to some silly sounding thing someone will come up with tomorrow, it’s something people want to know about.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;At the risk of sounding like a super noob, what&amp;#39;s a good introduction to crypto? From the basics through understanding current landscape&lt;/p&gt;&amp;mdash; Benny Wong (@bdotdub) &lt;a href=&quot;https://twitter.com/bdotdub/status/949389088976711680?ref_src=twsrc%5Etfw&quot;&gt;January 5, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;So you’re looking to learn a little something about how these new technologies work? Well Benny (and anyone not named Benny), I don’t have all the answers, but I do have two resources that people who are interested in the technical aspects should check out.&lt;/p&gt;

&lt;p&gt;If you want to learn about the blockchain, I would start &lt;a href=&quot;https://anders.com/blockchain/&quot;&gt;here&lt;/a&gt;. The video is only 17 minutes, and yet covers everything you need to know about how a blockchain is built and works.&lt;/p&gt;

&lt;p&gt;If you want to learn about Bitcoin, I would start &lt;a href=&quot;https://twit.tv/shows/security-now/episodes/287&quot;&gt;here&lt;/a&gt;, at the time marker 41:55. Everything I learned about Bitcoin in this episode of Security Now still holds up today, six years later. Steve Gibson was very early in understanding what makes the protocol interesting, along with its upsides and downsides. The only real thing that’s changed since this was recording is the addition of exchanges like &lt;a href=&quot;https://www.coinbase.com&quot;&gt;Coinbase&lt;/a&gt;, &lt;a href=&quot;https://www.gdax.com&quot;&gt;Gdax&lt;/a&gt;, &lt;a href=&quot;https://www.kraken.com&quot;&gt;Kraken&lt;/a&gt;, and others into the marketplace, as a way to centralize trading.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A personal note, if you’re just looking to invest in some cryptocurrency you probably don’t need to understand the underlying technology. The investment side currently is a speculative market based on projecting who the winners and losers in this space are going to be, and for the most part that’s relatively disconnected from the technology.&lt;/p&gt;

&lt;p&gt;And one more note, if you’re going to invest in cryptocurrency right now, only put in however much money you’re willing to lose. No one knows how the market is going to play out so I’d equate the whole thing to gambling at best.&lt;/p&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="programming" /><summary type="html">Cryptocurrency is all the rage these days. From Bitcoin to Ethereum to Ripple, to some silly sounding thing someone will come up with tomorrow, it’s something people want to know about.</summary></entry><entry><title type="html">Everyone Should Use Generics Except You</title><link href="http://localhost:4000/2017/12/26/everyone-should-use-generics-except-you/" rel="alternate" type="text/html" title="Everyone Should Use Generics Except You" /><published>2017-12-26T00:00:00-05:00</published><updated>2017-12-26T00:00:00-05:00</updated><id>http://localhost:4000/2017/12/26/everyone-should-use-generics-except-you</id><content type="html" xml:base="http://localhost:4000/2017/12/26/everyone-should-use-generics-except-you/">&lt;p&gt;As I was on hour six of debugging how to read an object from the database, my brain suddenly noticed the slight difference in two lines of code. The compiler error had been off, too vague to help me realize that I was never hinting the correct type to the function. Generics had struck again. I cursed in the general direction of my cat (unintentionally), and moved on. There was nothing I could do but accept that we’ve all been there, and move on.&lt;/p&gt;

&lt;p&gt;The creators of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Go_(programming_language)&quot;&gt;Go&lt;/a&gt; language have so far resisted the notion of adding generics. They have a well considered argument that adding generics into the language will add to it’s complexity, so much so that the power of the feature will be outweighed by the complications that the feature brings. What proponents of generics say is that the core team is not properly considering all the benefits of generics. The language’s surface will be simplified, your code as a consumer will be easier to write, and even that Go already has generics but only for certain blessed types that are built into the language.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Combining the two thoughts above, I had a thought of my own, since everything’s a remix after all. We boil down our problems to platitudes, as if fixing that one problem will be salvation for our existence. Functional is better than object oriented. React is better than Angular. Static is better than dynamic (it is…).&lt;/p&gt;

&lt;p&gt;Writing generic code is one of those trade offs. It can be mind bending, it’s no walk in the park, but it can be incredibly powerful. I don’t personally agree with the Go authors, but I’ll boil the problem down to a platitude of my own:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I want generics in my language. I don’t want anything to do with them myself 95% of the time, but I would love the features that others can build which capitalize on generics to make my life easier.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="featured" /><category term="go" /><category term="programming" /><summary type="html">As I was on hour six of debugging how to read an object from the database, my brain suddenly noticed the slight difference in two lines of code. The compiler error had been off, too vague to help me realize that I was never hinting the correct type to the function. Generics had struck again. I cursed in the general direction of my cat (unintentionally), and moved on. There was nothing I could do but accept that we’ve all been there, and move on.</summary></entry><entry><title type="html">Thinking About Thinking</title><link href="http://localhost:4000/2017/12/18/thinking-about-thinking/" rel="alternate" type="text/html" title="Thinking About Thinking" /><published>2017-12-18T00:00:00-05:00</published><updated>2017-12-18T00:00:00-05:00</updated><id>http://localhost:4000/2017/12/18/thinking-about-thinking</id><content type="html" xml:base="http://localhost:4000/2017/12/18/thinking-about-thinking/">&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Two meta-skills that help a programmer grow more than just practicing their coding. Thinking about thinking, and focusing on focusing.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/890204173920329728&quot;&gt;July 26, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;how-to-think-about-thinking-and-focus-on-focus&quot;&gt;How To Think About Thinking and Focus on Focus&lt;/h1&gt;

&lt;p&gt;Don’t focus on finding the perfect to-do list app. Once found, you still have to light the spark inside that keeps you going. It’s that spark that moves you along the road; a road that stretches surprisingly far.&lt;/p&gt;

&lt;p&gt;I set a goal for myself in early 2017. I was going to spend a lot of time learning. I wasn’t sure what this would look like. I gave myself time to figure it out. Things are rarely simple in life. I knew I wouldn’t find the answer right away.&lt;/p&gt;

&lt;p&gt;I wanted to learn how I learn. Everyone learns differently. I needed to figure out the best approach for &lt;em&gt;me&lt;/em&gt;. Before I even sat down to learn any topic in particular, I attended a &lt;a href=&quot;https://www.coursera.org/learn/learning-how-to-learn/&quot;&gt;Coursera class&lt;/a&gt; to gain perspective on learning. The course involved few weekends worth of work and I came away with great techniques and a deeper understanding of learning as a whole.&lt;/p&gt;

&lt;p&gt;Next, I considered the subject matter I wanted to learn. It had to be motivating: motivation has &lt;em&gt;always&lt;/em&gt; been a sticking point for me. So I decided to focus on skill building.&lt;/p&gt;

&lt;p&gt;I wanted to combine these two thoughts–learning and motivation–to put myself in a better position to learn. A few months passed and that’s when I realized: I still had a lot to learn about thinking itself.&lt;/p&gt;

&lt;h2 id=&quot;reading&quot;&gt;Reading&lt;/h2&gt;

&lt;p&gt;I’ve recently returned to reading, or more precisely, listening to books. My favorite books focus on what’s called “metacognition”. Metacognition means the &lt;em&gt;awareness&lt;/em&gt; and &lt;em&gt;understanding&lt;/em&gt; of your thought processes. Metacognition unlocked a door for me I hadn’t realized could be opened.&lt;/p&gt;

&lt;p&gt;I’ve always thought of myself as a person with good self-insight. As I began to read more, my doubts grew. &lt;a href=&quot;https://smile.amazon.com/Thinking-Fast-Slow-Daniel-Kahneman-ebook/dp/B00555X8OA/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;amp;qid=1501358078&amp;amp;sr=8-1&quot;&gt;Thinking Fast and Slow&lt;/a&gt; by Daniel Kahneman taught me how cognitive biases work. This knowledge left me both concerned, and, unexpectedly, relieved.&lt;/p&gt;

&lt;p&gt;My concern stemmed from the mental gymnastics my mind performs. I found myself especially prone to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Attribute_substitution&quot;&gt;attribute substitution bias&lt;/a&gt;, and a &lt;a href=&quot;https://en.m.wikipedia.org/wiki/Belief_bias&quot;&gt;few&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Availability_heuristic&quot;&gt;others&lt;/a&gt;. The brain prioritizes viewing the world in a way that suits you. It’s instinctual, protecting us from doubt and pain. It also keeps you away from new modes of thinking. Once I accepted that everyone’s mind tries to do this, I began to open up to new possibilities.&lt;/p&gt;

&lt;p&gt;I was also relieved. This model let me understood &lt;em&gt;why&lt;/em&gt; I thought the way I did. More importantly, I could now &lt;em&gt;leverage&lt;/em&gt; that knowledge for further growth. My path started with a simple goal: I wanted to learn more. Now,  I was ready to actually start putting these learnings into productive gains.&lt;/p&gt;

&lt;h2 id=&quot;practicing&quot;&gt;Practicing&lt;/h2&gt;

&lt;p&gt;Next, I needed to move from understanding myself to real world practice. In this, I learned three important lessons:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Think about thinking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Understanding yourself provides the key to discovering your boundaries, limitations, and possibilities. These margins guide you to areas where you can grow.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Even the smartest people are not able to learn something new any time. Their brains need rest, balance, and fuel.&lt;/li&gt;
  &lt;li&gt;The more in tune you are with where you are mentally, the easier you can acquire and assimilate new information.&lt;/li&gt;
  &lt;li&gt;Your ability to take in information changes over the course of your life both in the long and short term. For many people, it’s easier to learn at 2pm than 10pm. The next day, well rested at 10am, it’s easy again. This pattern isn’t true on only a daily basis, your life will go through similar cycles as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2) Plan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Time is the most precious resource you have, so deploy it wisely. I make a schedule &lt;strong&gt;every day&lt;/strong&gt;, split up into half hour intervals. &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; If something takes longer than a half hour, bubble it in for two half hour intervals. If something takes less time, feel free to squeeze in a couple of tasks into a half hour interval. This is a technique I picked up from &lt;a href=&quot;https://smile.amazon.com/Deep-Work-Focused-Success-Distracted-ebook/dp/B00X47ZVXM/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;amp;qid=1501358054&amp;amp;sr=8-1&quot;&gt;Deep Work&lt;/a&gt;, to help my daily planning.&lt;/p&gt;

&lt;p&gt;Each day’s planning acts as a meditative exercise. Every morning, I think about the shape of my day. I list my goals, which serve as landmarks throughout the day. On review, I can decide whether I’m accomplishing those goals and making progress. After adopting this style, I quickly noticed I had a weaker grasp on my time than I thought I did. It is incredibly difficult to create a schedule then stick with it, exactly as planned. And that’s ok.&lt;/p&gt;

&lt;p&gt;Each time I got off schedule, I could re-adjust and re-orient. I’d move around priority tasks, push others off for when I could give them the attention they deserved. When I found a task that kept getting bumped, I’d reconsider its merit. Over time you realize, “maybe this task isn’t as important as I thought it was”. Do this consistently, you won’t look at time the same way ever again.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) Focus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The easiest way to stay focused is to avoid distraction. Isolate yourself however you need to.&lt;/p&gt;

&lt;h3 id=&quot;physically&quot;&gt;Physically&lt;/h3&gt;
&lt;p&gt;If your environment isn’t productive, change it. I don’t work well in open offices where noise and conversation distract me. Other people can’t work from home, they prefer the sounds of the world as a background hum. A coffee shop may be a great match to your style or the silence of a museum library.&lt;/p&gt;

&lt;h3 id=&quot;mentally&quot;&gt;Mentally&lt;/h3&gt;
&lt;p&gt;Meditation can boost your energy levels. I use &lt;a href=&quot;https://www.headspace.com&quot;&gt;Headspace&lt;/a&gt; to introduce a five minute refresher during my mid-afternoon. Meditation allows my mind to rest after it’s been working for the entire day. Some prefer to start their morning off with fresh thoughts. Others like to clear their mind at night, making it the last thing they do. See what works best for you; maybe it’s all three.&lt;/p&gt;

&lt;h3 id=&quot;digitally&quot;&gt;Digitally&lt;/h3&gt;
&lt;p&gt;Tucking away distractions help you focus on your task. I try to keep everything that’s not immediately pertinent out of my sight. Surprisingly, hiding my &lt;a href=&quot;https://en.wikipedia.org/wiki/Dock_(macOS)&quot;&gt;Dock&lt;/a&gt; has been made me far less distracted. I used to spend my day distracted by red badge fever. &lt;em&gt;Slack&lt;/em&gt;, &lt;em&gt;Twitter&lt;/em&gt;, &lt;em&gt;Things&lt;/em&gt;, and other badged apps would eat into my thoughts. Now I stare full screen at whatever I’ve got open with no little red badges to grab my eye or pull at my thoughts.&lt;/p&gt;

&lt;p&gt;Acts like browsing the web are now a conscious choice. When I’m writing code and want to check my daily schedule’s progress, it’s a &lt;em&gt;choice&lt;/em&gt;, not an &lt;em&gt;impulse&lt;/em&gt;. I still live in the real world and connect to these things but I am not prodded to do so. I act when I find some time. When I’m focused, I’m focused. When I’m distracted, I’m distracted.&lt;/p&gt;

&lt;p&gt;Training your brain to focus is like any other form of exercise. It’s hard at first. As you root out distractions and adapt your environment, your focus muscle grows. As with all change and exercise, it gets easier and easier to avoid distractions over time.&lt;/p&gt;

&lt;h2 id=&quot;next&quot;&gt;Next&lt;/h2&gt;

&lt;p&gt;Still interested in figuring out how to grow more? If so, congratulations. It’s a hard but amazing path to look deep into yourself and decide to make changes. I wish you well along your journey and implore you to move deeper in your voyage.&lt;/p&gt;

&lt;p&gt;This journey isn’t about finding the perfect to-do list app. Once you’ve found one, you still have to find what’s inside of you that encourages you to keep growing. Once you’ve found that, you’ll be surprised at how long the road stretches.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Ok, I have to admit, I can’t always do this. Sometimes it’s too rigid, and I’m not well disciplined enough yet to live my own advice. There are days where I don’t have as clear a focus, and it shows in my schedule. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="featured" /><category term="productivity" /><category term="society" /><summary type="html">Two meta-skills that help a programmer grow more than just practicing their coding. Thinking about thinking, and focusing on focusing.&amp;mdash; Joe Fabisevich 🐶🐳™ (@mergesort) July 26, 2017 How To Think About Thinking and Focus on Focus Don’t focus on finding the perfect to-do list app. Once found, you still have to light the spark inside that keeps you going. It’s that spark that moves you along the road; a road that stretches surprisingly far. I set a goal for myself in early 2017. I was going to spend a lot of time learning. I wasn’t sure what this would look like. I gave myself time to figure it out. Things are rarely simple in life. I knew I wouldn’t find the answer right away. I wanted to learn how I learn. Everyone learns differently. I needed to figure out the best approach for me. Before I even sat down to learn any topic in particular, I attended a Coursera class to gain perspective on learning. The course involved few weekends worth of work and I came away with great techniques and a deeper understanding of learning as a whole. Next, I considered the subject matter I wanted to learn. It had to be motivating: motivation has always been a sticking point for me. So I decided to focus on skill building. I wanted to combine these two thoughts–learning and motivation–to put myself in a better position to learn. A few months passed and that’s when I realized: I still had a lot to learn about thinking itself. Reading I’ve recently returned to reading, or more precisely, listening to books. My favorite books focus on what’s called “metacognition”. Metacognition means the awareness and understanding of your thought processes. Metacognition unlocked a door for me I hadn’t realized could be opened. I’ve always thought of myself as a person with good self-insight. As I began to read more, my doubts grew. Thinking Fast and Slow by Daniel Kahneman taught me how cognitive biases work. This knowledge left me both concerned, and, unexpectedly, relieved. My concern stemmed from the mental gymnastics my mind performs. I found myself especially prone to the attribute substitution bias, and a few others. The brain prioritizes viewing the world in a way that suits you. It’s instinctual, protecting us from doubt and pain. It also keeps you away from new modes of thinking. Once I accepted that everyone’s mind tries to do this, I began to open up to new possibilities. I was also relieved. This model let me understood why I thought the way I did. More importantly, I could now leverage that knowledge for further growth. My path started with a simple goal: I wanted to learn more. Now, I was ready to actually start putting these learnings into productive gains. Practicing Next, I needed to move from understanding myself to real world practice. In this, I learned three important lessons: 1) Think about thinking Understanding yourself provides the key to discovering your boundaries, limitations, and possibilities. These margins guide you to areas where you can grow. Even the smartest people are not able to learn something new any time. Their brains need rest, balance, and fuel. The more in tune you are with where you are mentally, the easier you can acquire and assimilate new information. Your ability to take in information changes over the course of your life both in the long and short term. For many people, it’s easier to learn at 2pm than 10pm. The next day, well rested at 10am, it’s easy again. This pattern isn’t true on only a daily basis, your life will go through similar cycles as well. 2) Plan Time is the most precious resource you have, so deploy it wisely. I make a schedule every day, split up into half hour intervals. 1 If something takes longer than a half hour, bubble it in for two half hour intervals. If something takes less time, feel free to squeeze in a couple of tasks into a half hour interval. This is a technique I picked up from Deep Work, to help my daily planning. Each day’s planning acts as a meditative exercise. Every morning, I think about the shape of my day. I list my goals, which serve as landmarks throughout the day. On review, I can decide whether I’m accomplishing those goals and making progress. After adopting this style, I quickly noticed I had a weaker grasp on my time than I thought I did. It is incredibly difficult to create a schedule then stick with it, exactly as planned. And that’s ok. Each time I got off schedule, I could re-adjust and re-orient. I’d move around priority tasks, push others off for when I could give them the attention they deserved. When I found a task that kept getting bumped, I’d reconsider its merit. Over time you realize, “maybe this task isn’t as important as I thought it was”. Do this consistently, you won’t look at time the same way ever again. 3) Focus The easiest way to stay focused is to avoid distraction. Isolate yourself however you need to. Physically If your environment isn’t productive, change it. I don’t work well in open offices where noise and conversation distract me. Other people can’t work from home, they prefer the sounds of the world as a background hum. A coffee shop may be a great match to your style or the silence of a museum library. Mentally Meditation can boost your energy levels. I use Headspace to introduce a five minute refresher during my mid-afternoon. Meditation allows my mind to rest after it’s been working for the entire day. Some prefer to start their morning off with fresh thoughts. Others like to clear their mind at night, making it the last thing they do. See what works best for you; maybe it’s all three. Digitally Tucking away distractions help you focus on your task. I try to keep everything that’s not immediately pertinent out of my sight. Surprisingly, hiding my Dock has been made me far less distracted. I used to spend my day distracted by red badge fever. Slack, Twitter, Things, and other badged apps would eat into my thoughts. Now I stare full screen at whatever I’ve got open with no little red badges to grab my eye or pull at my thoughts. Acts like browsing the web are now a conscious choice. When I’m writing code and want to check my daily schedule’s progress, it’s a choice, not an impulse. I still live in the real world and connect to these things but I am not prodded to do so. I act when I find some time. When I’m focused, I’m focused. When I’m distracted, I’m distracted. Training your brain to focus is like any other form of exercise. It’s hard at first. As you root out distractions and adapt your environment, your focus muscle grows. As with all change and exercise, it gets easier and easier to avoid distractions over time. Next Still interested in figuring out how to grow more? If so, congratulations. It’s a hard but amazing path to look deep into yourself and decide to make changes. I wish you well along your journey and implore you to move deeper in your voyage. This journey isn’t about finding the perfect to-do list app. Once you’ve found one, you still have to find what’s inside of you that encourages you to keep growing. Once you’ve found that, you’ll be surprised at how long the road stretches. Ok, I have to admit, I can’t always do this. Sometimes it’s too rigid, and I’m not well disciplined enough yet to live my own advice. There are days where I don’t have as clear a focus, and it shows in my schedule. &amp;#x21a9;&amp;#xfe0e;</summary></entry><entry><title type="html">Handing Off Public Extension</title><link href="http://localhost:4000/2017/12/06/handing-off-public-extension/" rel="alternate" type="text/html" title="Handing Off Public Extension" /><published>2017-12-06T00:00:00-05:00</published><updated>2017-12-06T00:00:00-05:00</updated><id>http://localhost:4000/2017/12/06/handing-off-public-extension</id><content type="html" xml:base="http://localhost:4000/2017/12/06/handing-off-public-extension/">&lt;p&gt;Firing off the first tweet for &lt;a href=&quot;https://twitter.com/PublicExtension&quot;&gt;@PublicExtension&lt;/a&gt; on October 9th, 2015 was a rush. I was on the tail end of my batch at the &lt;a href=&quot;https://www.recurse.com&quot;&gt;Recurse Center&lt;/a&gt;, after having spent the &lt;a href=&quot;http://jasdev.me/one-month-at-recurse-center&quot;&gt;previous quarter transitioning&lt;/a&gt; from an backend engineer to writing Swift every day. The goal was to regularly post extensions I’ve come up with, stumbled upon, or received from the community. In the span of a year, I collected 89 extensions, had &lt;a href=&quot;https://twitter.com/jasdev/status/767781639837609984&quot;&gt;countless conversations&lt;/a&gt; with the Core Team, and even &lt;a href=&quot;https://www.instagram.com/p/BKIGsJvjg74&quot;&gt;represented the account at XOXO Festival&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, I (accidentally) treated Public Extension like a “&lt;a href=&quot;https://dianaberlin.com/posts/no-more-forever-projects&quot;&gt;Forever Project&lt;/a&gt;.” Without an end in sight, the weight of “do I just keep running this account ad infinitum” caused missed days to turn into weeks, and weeks into a year of hibernation. My energy drifted elsewhere. &lt;a href=&quot;http://jasdev.me&quot;&gt;Writing&lt;/a&gt;, &lt;a href=&quot;http://jasdev.me/crafting-space&quot;&gt;building out&lt;/a&gt; Peloton’s iOS team, and &lt;a href=&quot;https://www.instagram.com/p/BU5jrpRgmeW&quot;&gt;crafting memories&lt;/a&gt; with friends on two wheels. Until a couple of weeks ago, I had almost forgotten about the project when Joe—commonly aliased as &lt;a href=&quot;https://twitter.com/mergesort&quot;&gt;@mergesort&lt;/a&gt;—expressed interest in taking the baton.&lt;/p&gt;

&lt;p&gt;I couldn’t imagine a better fit. Not only is Joe a &lt;a href=&quot;https://twitter.com/search?l=&amp;amp;q=from%3Ajasdev%20%40mergesort&amp;amp;src=typd&quot;&gt;great friend&lt;/a&gt; who is 1000% game to &lt;a href=&quot;https://twitter.com/mergesort/status/776210727078092800&quot;&gt;volley Swift puns&lt;/a&gt;, but he also has a track record of helping, advising, and guiding folks in the iOS community. A lunch, &lt;a href=&quot;https://github.com/mergesort/Public-Extension&quot;&gt;repository transfer&lt;/a&gt;, and a few iMessages later, Public Extension has a second wind. Joe and I have discussed some of his early plans for the account and I’m stoked. Please give him the same &lt;a href=&quot;https://twitter.com/parrots/status/779014268905816064&quot;&gt;support&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/jakemarsh/status/652543263690199040&quot;&gt;cheers&lt;/a&gt; y’all have kindly given me along the first leg of PE’s relay. Below are some notes about the transition and aspects that will remain the same:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To prevent old commit permalinks from breaking, we &lt;a href=&quot;https://github.com/mergesort/Public-Extension&quot;&gt;transferred the repository&lt;/a&gt; to Joe’s GitHub account and &lt;a href=&quot;https://github.com/Jasdev/Public-Extension&quot;&gt;I forked it&lt;/a&gt;. This means that all of the old tweets can safely be embedded.&lt;/li&gt;
  &lt;li&gt;The account wouldn’t have been possible without submissions. Going forward, all extensions will &lt;em&gt;continue&lt;/em&gt; to link back to the original author, if applicable and with permission.&lt;/li&gt;
  &lt;li&gt;On the note of submissions, they will still be accepted 💙 Joe can provide more details on preferred ways to do so.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="swift" /><category term="featured" /><category term="life-events" /><summary type="html">Firing off the first tweet for @PublicExtension on October 9th, 2015 was a rush. I was on the tail end of my batch at the Recurse Center, after having spent the previous quarter transitioning from an backend engineer to writing Swift every day. The goal was to regularly post extensions I’ve come up with, stumbled upon, or received from the community. In the span of a year, I collected 89 extensions, had countless conversations with the Core Team, and even represented the account at XOXO Festival.</summary></entry><entry><title type="html">Foundations</title><link href="http://localhost:4000/2017/11/07/foundations/" rel="alternate" type="text/html" title="Foundations" /><published>2017-11-07T00:00:00-05:00</published><updated>2017-11-07T00:00:00-05:00</updated><id>http://localhost:4000/2017/11/07/foundations</id><content type="html" xml:base="http://localhost:4000/2017/11/07/foundations/">&lt;p&gt;Every day at a startup is an exercise in getting to tomorrow. Some days it’s easier, some days it’s harder, but if you don’t make it until tomorrow, there won’t be a next week, month, or year.&lt;/p&gt;

&lt;p&gt;This is why building a long-term foundation is incredibly important. If you keep making it to tomorrow without thinking ahead, in three years you might look at what you’ve built and realize that you’ve set yourself up for mediocrity or failure.&lt;/p&gt;

&lt;p&gt;Every decision you make today is implicitly a decision you’ve made for the next few years. There’s a question of whether you’ll make it that far, and you can always change course from your decisions (and you should!), but it’s not without cost.&lt;/p&gt;

&lt;p&gt;Stop thinking about how to build a company that lasts, start thinking about how to build a great company that lasts. Start making decisions today that will help you build a great company. Because down the road you might look back and realize that your company isn’t that great after all.&lt;/p&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="industry" /><summary type="html">Every day at a startup is an exercise in getting to tomorrow. Some days it’s easier, some days it’s harder, but if you don’t make it until tomorrow, there won’t be a next week, month, or year.</summary></entry><entry><title type="html">Dev Chats - Joe Fabisevich</title><link href="http://localhost:4000/2017/10/24/dev-chats-joe-fabisevich-sam-jarman/" rel="alternate" type="text/html" title="Dev Chats - Joe Fabisevich" /><published>2017-10-24T00:00:00-04:00</published><updated>2017-10-24T00:00:00-04:00</updated><id>http://localhost:4000/2017/10/24/dev-chats-joe-fabisevich-sam-jarman</id><content type="html" xml:base="http://localhost:4000/2017/10/24/dev-chats-joe-fabisevich-sam-jarman/">&lt;h4 id=&quot;introduce-yourself-who-are-you-where-do-you-work&quot;&gt;Introduce yourself! Who are you? Where do you work?&lt;/h4&gt;

&lt;p&gt;Hey Sam, thanks for this interview! I’ve been reading your other developer interviews and am humbled to be in the same company as them.&lt;/p&gt;

&lt;p&gt;I’m Joe Fabisevich, an iOS developer in New York City, with no specific ties to a company right now. I spent the first 5 or 6 years of my career  working startups like Timehop, Betaworks, and Bitly. Last year I decided to take the things I’d learned and help other companies grow via consulting work.&lt;/p&gt;

&lt;p&gt;My job is to help companies get through whatever challenges they’re currently face. I enjoy working most with early stage startups, so a lot of my work focuses around getting startups to their 1.0. Often times they’re starting with nothing more than sketches and wireframes. Other times I help businesses figure out their mobile strategy, or work with iOS teams to grow their skills. This is especially interesting as iOS has recently moved to Swift, and there are few experts in the field so far. I wanted to add flexibility in my life, and now I’m able to tackle all different kinds of challenges. Not all of my work is even engineering related, which makes it fun to grow in many directions.&lt;/p&gt;

&lt;h4 id=&quot;who-or-what-got-you-into-programming&quot;&gt;Who or what got you into programming?&lt;/h4&gt;

&lt;p&gt;It’s a bit cliché, but I got into programming somewhat by accident. In high school my grades were pretty poor, and I had to choose a major for my junior and senior years. My mom was a mainframe programmer and told me that if I took the computer science course, she would help me out. (Please don’t tell my 11th grade AP Java teacher Mr. Turner). After about two weeks, she declared that she was completely out of her element, and that I was on my own.&lt;/p&gt;

&lt;p&gt;I was never a great rote learner, but I was always good with understanding patterns and systems. Programming lends itself to hands on learning, which made me finally feel good about learning. After some initial success, I was pretty hooked. As I got better, I was able to start helping others, which was also something I’d never been able to do.&lt;/p&gt;

&lt;p&gt;In college I majored in computer science, but rather aimlessly. When the iPhone came out, I really wanted to make an app for it with a friend, and so I mustered up my strength and did. The code was awful, and the UI was hideous by today’s standards, but there were probably only 10,000 or so people building apps, so it was felt like quite an accomplishment. Since there was so little iOS talent out there, I was able to parlay that app into an internship. As I left school (after spending most of it building apps in class), I was able to turn that internship and subsequent apps into my first startup job.&lt;/p&gt;

&lt;h4 id=&quot;whats-the-tech-scene-like-in-nyc-any-major-upsides-and-downsides&quot;&gt;What’s the tech scene like in NYC? Any major upsides and downsides?&lt;/h4&gt;

&lt;p&gt;The tech scene in New York City is quite a mixed bag, but I feel that way about most things in New York. Tech is not the top dog in this city, which has it’s pros and cons.&lt;/p&gt;

&lt;p&gt;The biggest pro is that as an industry, we stay mostly grounded. We use our technology to lift up other industries, as well as tech for tech’s sake. This helps us avoid a monoculture like you see in Silicon Valley.&lt;/p&gt;

&lt;p&gt;The biggest con is that as an industry, we stay mostly grounded. This means that we don’t attract as much talent (though there’s still plenty), or work on as many moonshot ideas as you’d see in Silicon Valley. Those moonshot ideas are the one’s that grow to be Facebook or Airbnb, and affect our lives in an outsized manner.&lt;/p&gt;

&lt;p&gt;As a person, it’s hard to say whether I would trade one for the other, but it’s always a fun thought experiment.&lt;/p&gt;

&lt;h4 id=&quot;youve-worked-both-for-companies-and-for-yourself--do-you-have-a-preference-what-are-the-advantages-and-disadvantages&quot;&gt;You’ve worked both for companies and for yourself – do you have a preference? What are the advantages and disadvantages?&lt;/h4&gt;

&lt;p&gt;Like everything in life, there’s pros and cons to everything. I don’t have a preference, and don’t think I’ll always be a consultant, but don’t think I’ll always work full time either.&lt;/p&gt;

&lt;p&gt;Being a consultant gives me work-life balance that’s hard to beat. It’s quite an opportunity to use the extra time I have to invest in my own learning. I can spend more time reading about product, design, management, or even things like metacognition, which help me grow in my career.&lt;/p&gt;

&lt;p&gt;On the other hand there are some skills you can learn at a company over the long term. I still work at and with companies, but being with a company for a while helps you develop different skills.&lt;/p&gt;

&lt;p&gt;I tend to think of it as growing in a breadth-first manner vs. a depth-first manner. Both will likely get you to the place you want to be, but the path will look different. Ultimately what works best for you is in your hands.&lt;/p&gt;

&lt;h4 id=&quot;what-has-been-your-toughest-lesson-to-learn-in-your-software-career-so-far&quot;&gt;What has been your toughest lesson to learn in your software career so far?&lt;/h4&gt;

&lt;p&gt;I’d say the career matters. Developers often don’t want to think about their career, and instead think about programming. It makes sense because it takes a while to become comfortable enough to feel confident in what you’re doing, but as a result other people’s other skills suffer.&lt;/p&gt;

&lt;p&gt;I’ve always been interested in product, design, and programming, so choosing a linear path was difficult for me. Nowadays I’m able to leverage those skills as a consultant and former startup founder. On the other hand, I hadn’t spent much time thinking about management or a career track until recently, and realized that I’ve got little experience with that and now am playing catch up. Ultimately it may not matter because you can’t predict your future, but it is very important to be in touch with your goals to move forward as much as possible, without parallel diversions.&lt;/p&gt;

&lt;h4 id=&quot;what-would-be-your-number-one-piece-of-advice-for-a-successful-software-career&quot;&gt;What would be your number one piece of advice for a successful software career?&lt;/h4&gt;

&lt;p&gt;Everyone starts at the beginning and there’s no way around it. Luckily, that’s ok. Over the first few years of my software career I read anything programming related in sight that sounded interesting. Even if it didn’t pertain to what I was currently working on, I would still read it. That ended up paying dividends as I started to expand my horizons. Even though I didn’t understand it all, I had all this knowledge tucked away in the back of my brain for a later day.&lt;/p&gt;

&lt;p&gt;When it was time for me to try my hand at Python, I didn’t need to start from scratch. When I wanted to build a website, it was as easy as recalling that tutorial I read a month ago. Better yet, I took the lessons I learned in other languages and frameworks, and applied them to what I was working on as I saw fit. This allowed me to grow in ways that my peers weren’t, and made a more confident programmer.&lt;/p&gt;

&lt;p&gt;While this technique worked for me, I can’t promise it will work for everyone. Everyone learns differently, and you have to find your path. What I will suggest though is trying it out and seeing if it works for you! Maybe it won’t be the only way you grow, but it can be another tool in your toolbelt.&lt;/p&gt;

&lt;h4 id=&quot;what-programming-skill-do-you-think-is-underrated&quot;&gt;What programming skill do you think is underrated?&lt;/h4&gt;

&lt;p&gt;There are two personality traits which go hand in hand. Empathy and modesty can take you from being a good programmer to being a good teammate. Being a good teammate can transform you into a great asset. If you apply these traits, you’ll more easily accept your flaws, and that will empower you to your co-workers and fellow community members.&lt;/p&gt;

&lt;p&gt;One underrated aspect of empathy and modesty is that over time you become more confident and humble. Confidence and humility allow you to turn anything into a learning opportunity. The more you can say “I don’t know, but I want to learn about it” either to yourself or to a peer, the more you’ll open yourself up to an opportunity to grow. Over time it will become an innate part of how you approach solving problems.&lt;/p&gt;

&lt;h4 id=&quot;what-booksresources-would-you-recommend&quot;&gt;What books/resources would you recommend?&lt;/h4&gt;

&lt;p&gt;I’m going to be a little self-serving here, but I maintain a &lt;a href=&quot;https://pinboard.in/u:mergesort/t:learn-programming&quot;&gt;Pinboard tag&lt;/a&gt; where I post articles. The articles are ones that I’ve come across in my career that taught me something, with information I wish I knew when I was just starting out as a programmer. Sometimes I go back and re-read the articles, and I’ll still pick up new things. As I’ve grown, the advice and stories take on new life and new meaning.&lt;/p&gt;

&lt;p&gt;I recommend going through the posts in reverse order. The first posts are more foundational and encourage bigger thinking. I’m really big on RSS, so I recommend subscribing to the &lt;a href=&quot;https://feeds.pinboard.in/rss/u:mergesort/t:learn-programming/&quot;&gt;feed&lt;/a&gt;, so that way you can always get a new article right after it’s posted.&lt;/p&gt;

&lt;h4 id=&quot;finally-make-your-shoutout-what-would-you-like-the-readers-to-go-have-a-look-at&quot;&gt;Finally, make your shoutout! What would you like the readers to go have a look at?&lt;/h4&gt;

&lt;p&gt;I think right now it’s important to not forget about others in need. There are people dealing with natural disasters that have entirely uprooted people’s lives. A cause that’s near and dear to my heart is the &lt;a href=&quot;http://hispanicfederation.org/unidos/&quot;&gt;Hispanic Federation&lt;/a&gt;, where every dollar will go to aid on the ground in Puerto Rico. You can choose your own cause, but the important thing is to do something.&lt;/p&gt;

&lt;p&gt;Personally you can find me on &lt;a href=&quot;http://twitter.com/mergesort&quot;&gt;Twitter&lt;/a&gt; where I am busy saying anything that comes into my head, so my apologies in advance.&lt;/p&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="featured" /><category term="industry" /><category term="iOS" /><category term="productivity" /><category term="programming" /><summary type="html">Introduce yourself! Who are you? Where do you work?</summary></entry><entry><title type="html">Why Tech Startups Have Overly Large Mobile Teams - A Thread</title><link href="http://localhost:4000/2017/05/05/why-tech-startups-have-overly-large-mobile-teams/" rel="alternate" type="text/html" title="Why Tech Startups Have Overly Large Mobile Teams - A Thread" /><published>2017-05-05T00:00:00-04:00</published><updated>2017-05-05T00:00:00-04:00</updated><id>http://localhost:4000/2017/05/05/why-tech-startups-have-overly-large-mobile-teams</id><content type="html" xml:base="http://localhost:4000/2017/05/05/why-tech-startups-have-overly-large-mobile-teams/">&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583644074835969?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583646385885184?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583651653955584?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583655416188928?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583661401460736?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583667269349376?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583670800941056?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583677520117760?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583683669053446?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583689901748224?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&lt;/p&gt;&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) &lt;a href=&quot;https://twitter.com/mergesort/status/860583929660747776?ref_src=twsrc%5Etfw&quot;&gt;May 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="apple" /><category term="go" /><category term="iOS" /><category term="featured" /><category term="industry" /><category term="life-events" /><category term="productivity" /><category term="programming" /><category term="society" /><category term="swift" /><summary type="html">1) Bad reasons why tech startups have incredibly large mobile teams even though from an engineering perspective they don’t need it.&amp;mdash; Joe Fabisevich 🐶🐯🇵🇷🐱🐳™ (@mergesort) May 5, 2017</summary></entry><entry><title type="html">Debugging shortcuts for UIKeyCommand</title><link href="http://localhost:4000/2017/04/02/debugging-shortcuts-for-uikeycommand/" rel="alternate" type="text/html" title="Debugging shortcuts for UIKeyCommand" /><published>2017-04-02T00:00:00-04:00</published><updated>2017-04-02T00:00:00-04:00</updated><id>http://localhost:4000/2017/04/02/debugging-shortcuts-for-uikeycommand</id><content type="html" xml:base="http://localhost:4000/2017/04/02/debugging-shortcuts-for-uikeycommand/">&lt;p&gt;I recently re-discovered &lt;code class=&quot;highlighter-rouge&quot;&gt;UIKeyCommand&lt;/code&gt; while listening to &lt;a href=&quot;https://www.twitter.com/calebd&quot;&gt;Caleb Davenport&lt;/a&gt;’s, &lt;a href=&quot;https://overcast.fm/+GuhgtcBa4&quot;&gt;podcast&lt;/a&gt;, Runtime. He’s also got a &lt;a href=&quot;https://calebd.me/posts/uikeycommand&quot;&gt;blog post&lt;/a&gt; which shows you exactly how simple it is to create &lt;code class=&quot;highlighter-rouge&quot;&gt;UIKeyCommand&lt;/code&gt; shortcuts for your app.&lt;/p&gt;

&lt;p&gt;After reading that, I decided that it would be neat to implement them across my app, so I could also start navigating around my UI with lightning speed while I’m debugging in the simulator. I quickly realized that by using Swift extensions, I could automatically get these behaviors for free throughout our entire app.&lt;/p&gt;

&lt;p&gt;Below is a code snippet which you can drop into your app to help you speed up your workflow. With just one tap on your keyboard, you’ll be able to pop a UIViewController from a navigation stack and dismiss any presented &lt;code class=&quot;highlighter-rouge&quot;&gt;UIViewController&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;keyCommands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UIKeyCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;UIKeyCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIKeyInputLeftArrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;modifierFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;popViewControllerWithKeyCommand&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;UIKeyCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIKeyInputDownArrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;modifierFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dismissViewControllerWithKeyCommand&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;dynamic&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;popViewControllerWithKeyCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;navigationController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;popViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;dynamic&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dismissViewControllerWithKeyCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dismiss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Don’t forget, you can make your own default shortcuts too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy debugging!&lt;/strong&gt;&lt;/p&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="swift" /><category term="programming" /><category term="iOS" /><summary type="html">I recently re-discovered UIKeyCommand while listening to Caleb Davenport’s, podcast, Runtime. He’s also got a blog post which shows you exactly how simple it is to create UIKeyCommand shortcuts for your app.</summary></entry><entry><title type="html">WWDC 2016 — My Fantasy Edition</title><link href="http://localhost:4000/2016/06/10/wwdc-2016-my-fantasy-edition/" rel="alternate" type="text/html" title="WWDC 2016 — My Fantasy Edition" /><published>2016-06-10T00:00:00-04:00</published><updated>2016-06-10T00:00:00-04:00</updated><id>http://localhost:4000/2016/06/10/wwdc-2016-my-fantasy-edition</id><content type="html" xml:base="http://localhost:4000/2016/06/10/wwdc-2016-my-fantasy-edition/">&lt;p&gt;WWDC is right around the corner! This post isn’t intended to be a prediction, as much as what I hope unfolds.&lt;/p&gt;

&lt;p&gt;As Betrand Serlet, a former Apple engineer discussed in this 90 second video &lt;a href=&quot;https://www.youtube.com/watch?v=jd97us27eSg&quot;&gt;clip&lt;/a&gt;, Apple often ships features iteratively. Projects start off private, only to be used internally, often times for a year or two. When they feel stable enough, Apple opens them up to 3rd party developers, and makes it an official API. Features that are deemed noteworthy and successful continue to build on, while others are simply forgotten.&lt;/p&gt;

&lt;p&gt;The three technologies below have gone through this lifecycle the last few years, and I think they are ready to converge into a big way, changing how we use iOS every day.&lt;/p&gt;

&lt;h3 id=&quot;universal-links&quot;&gt;Universal Links&lt;/h3&gt;

&lt;p&gt;Since the first days of iOS, URL schemes were a way to take you from one app to another. You could provide some context with URLs like &lt;code class=&quot;highlighter-rouge&quot;&gt;myapp://profile&lt;/code&gt;, but nothing more.&lt;/p&gt;

&lt;p&gt;Then iOS 8 finally began allowing developers to break out of apps. Apple started allowing developers to create extensions, little parts of your app that can run in another app.&lt;/p&gt;

&lt;p&gt;In iOS 9, Apple went even further down that route by adding Spotlight. This method of universal search combined with the &lt;code class=&quot;highlighter-rouge&quot;&gt;NSUserActivity&lt;/code&gt; API allowed a developer to define entry points into their app. Most importantly though, Apple introduced ‘universal links’, real URLs like ones you’d find on the internet that would open a corresponding app instead of Safari. For example, if I sent you this Medium article in a text message and you had the app installed, it would open up in the Medium app, not a website. While a great idea, the implementation still left room for improvement, as users often get bounced into to an app without wanting or expecting to be.&lt;/p&gt;

&lt;h3 id=&quot;remote-view-controllers&quot;&gt;Remote View Controllers&lt;/h3&gt;

&lt;p&gt;If you’ve ever been in an app and wanted to send an email, Apple provides a way to pull up the Mail app without leaving the app you’re currently in. Apple lets developers open up this Mail view (&lt;code class=&quot;highlighter-rouge&quot;&gt;MFMailComposeViewController&lt;/code&gt; for you nerds out there), to send messages from within another app. And so you have remote view controllers, screens from another app presented within your app.&lt;/p&gt;

&lt;p&gt;Currently, if you want an experience like this, you’d have to integrate an SDK or do a one-off partnership with a company. I think iOS 10 will finally bring this functionality to all 3rd party developers. Imagine how quickly you could post a tweet by pressing a tweet button within an app and having it present a Compose Tweet screen instead of opening the Twitter app. How about calling an Uber when you’re in Google Maps, Yelp, or Foursquare? The possibilities are endless.&lt;/p&gt;

&lt;p&gt;Implementing this can be made especially simple if you can just piggy back off the universal links that we mentioned before. Add a URL, and if the user has the app installed, it will present in your app without them having to go anywhere.&lt;/p&gt;

&lt;h3 id=&quot;siri&quot;&gt;Siri&lt;/h3&gt;

&lt;p&gt;Having been a part of iOS for almost 5 years now, Siri has gone through a similar lifecycle as these other technologies. Initially, Siri was a concierge for Apple’s apps from setting reminders to making phone calls. Apple started adding additional partners like Yelp, Wikipedia, and HomeKit vendors. People have been saying it for years, and at this point the tech world is convinced that a Siri API is most certainly coming in iOS 10.&lt;/p&gt;

&lt;p&gt;I also believe Apple is ready to take this next step, and open it up to 3rd party developers. While I don’t think we will have the ability to add Siri functionality into our apps, I’m confident that we will be able to add our own app functionality into Siri. A likely implementation would be building queries that Siri can respond to by presenting the remote view controllers discussed above. Asking Siri to “find me an Italian restaurant” will pull up the remote view controller from Yelp, so you can satisfy those pasta cravings. Those who wish to dive into your app’s richer experience could use the &lt;code class=&quot;highlighter-rouge&quot;&gt;NSUserActivity&lt;/code&gt; API and deep links, to have Siri launch you into the app in the exact place you wanted.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Whether my fantasy becomes a reality, I think WWDC is going to be huge. I’m very excited, more so than I have been the last few years. If you see something like this Monday on stage at WWDC, I told you so. And if you don’t, then just remember I’ve been wrong before, but that doesn’t mean I won’t be right some day. 😉&lt;/p&gt;</content><author><name>Joe Fabisevich</name><email>&lt;ireadyeveryemail@fabisevi.ch&gt;</email></author><category term="iOS" /><category term="apple" /><category term="programming" /><summary type="html">WWDC is right around the corner! This post isn’t intended to be a prediction, as much as what I hope unfolds.</summary></entry></feed>